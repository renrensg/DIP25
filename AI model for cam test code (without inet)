#!/usr/bin/env python3
import cv2
from ultralytics import YOLO

# ============== CONFIGURATION ==============
MODEL_PATH = "/home/dip25/Downloads/weights-2.pt"   # Path to your Roboflow weights
IMAGE_PATH = "/home/dip25/Downloads/test.jpg"  # Replace with your uploaded image
SAVE_PATH  = "/home/dip25/Downloads/result.jpg" # Output file

CONF_THRESHOLD = 0.5  # minimum confidence for detections

# ============== LOAD MODEL ==============
print("üöÄ Loading YOLO model...")
model = YOLO(MODEL_PATH)
print("‚úÖ Model loaded successfully!")

# ============== RUN DETECTION ==============
print(f"üîç Running detection on {IMAGE_PATH} ...")
results = model.predict(source=IMAGE_PATH, conf=CONF_THRESHOLD, imgsz=640, verbose=False)

# ============== PROCESS AND SAVE RESULTS ==============
for r in results:
    boxes = r.boxes
    names = r.names
    img = cv2.imread(IMAGE_PATH)

    for b in boxes:
        x1, y1, x2, y2 = map(int, b.xyxy[0])
        conf = float(b.conf[0])
        cls_id = int(b.cls[0])
        label = f"{names[cls_id]} {conf:.2f}"

        # Draw bounding box and label
        cv2.rectangle(img, (x1, y1), (x2, y2), (0, 255, 0), 2)
        cv2.putText(img, label, (x1, max(y1 - 5, 15)), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)

    # Save annotated result
    cv2.imwrite(SAVE_PATH, img)
    print(f"‚úÖ Detection complete! Saved annotated image as: {SAVE_PATH}")

print("üéâ Done!")
